generic(s) :: Integer => Integer = 
 | s `eq` 2 => generic(s)
 | True => generic(s)
// huh
BVV(a, b) :: Integer => Integer => Boolean = True
  where b :: Integer = 23

l `TST` a :: Integer => Integer => Integer = l + b  // comment
 where b :: Integer = a + generic(l)
 where cf(w, x) :: Integer => Integer => Integer = 
  | b `eq` 2 => b
  | True => b
 where c :: Integer = generic(a+b, l-b, a `cf` b, a * b, a `BVV` b)
(module 
	(func $+ (param $+::a TYPE) (param $+::b TYPE) (result TYPE) args.get $+::a args.get $+::b i32.add) 
	(func $- (param $-::a TYPE) (param $-::b TYPE) (result TYPE) args.get $-::a args.get $-::b i32.sub) 
	(func $eq (param $eq::a TYPE) (param $eq::b TYPE) (result TYPE) args.get $eq::a args.get $eq::b i32.sub i32.const 0 i32.eq) 
	(func $generic (param $generic::s TYPE) (result TYPE) (if args.get $generic::s i32.const 2 i32.eq 
	(then args.get $generic::s args.get $generic) 
	(else (if i32.const 0xFFFFFFFF 
	(then args.get $generic::s args.get $generic) 
	(else))))) 
	(func $BVV (param $BVV::a TYPE) (param $BVV::b TYPE) (result TYPE) locals.get $BVV::bf) 
	(func $TST (param $TST::l TYPE) (param $TST::ab TYPE) (result TYPE) args.get $TST::l locals.get $TST::b i32.add) 
(export)) 